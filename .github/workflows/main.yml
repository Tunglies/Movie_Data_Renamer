name: PyInstaller

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Dependences
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Test
        run: |
          python test_renamer.py
      
      - name: Build
        run: |
          pyinstaller -F renamer.py -n Movie_Data_Renamer-CLI-${{ env.VERSION }}-${{ runner.os }}-amd64
        
      # - name: Build with PyInstaller for macos/ubuntu
      #   if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      #   run: |
      #     pyinstaller \
      #       --onefile renamer.py \
      #       --python-option u \

      # - name: Build with PyInstaller for windows
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     pyinstaller `
      #       --onefile renamer.py `
      #       --python-option u `

      # - name: Set VERSION variable for macos/ubuntu
      #   if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      #   run: |
      #     echo "VERSION=$(python version.py)" >> $GITHUB_ENV

      # - name: Set VERSION variable for windows
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     echo "VERSION=$(python version.py)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: Movie_Data_Renamer-CLI-${{ env.VERSION }}-${{ runner.os }}-amd64
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist
